name: Connector Tests (beta)

on:
  # Triggered by all push events
  push:
  pull_request:
    types: [opened, synchronize, reopened]

  # Available as a reusable workflow
  # (https://docs.github.com/en/actions/sharing-automations/reusing-workflows)
  workflow_call:
    inputs:

      connector_name:
        type: string
        required: false
        description: >
          The name of the connector(s) to test.
          To test multiple connectors, use a newline-delimited
          or comma-separated list of connector names.

          If not provided, the workflow will try to infer the
          connector name from the PR title.

      repo:
        type: string
        required: false
        description: "The repository name"
      gitref:
        type: string
        required: false
        description: "The git reference (branch or tag)"
      comment-id:
        type: number
        required: false
        description: "The ID of the comment triggering the workflow"
      pr:
        type: number
        required: false
        description: "The pull request number, if applicable"

  # Available as a slash command and workflow dispatch
  workflow_dispatch:
    inputs:

      # Custom inputs for the connector test command:
      connector_name:
        required: false
        description: |
          The name of the connector(s) to test.
          To test multiple connectors, use a newline-delimited
          or comma-separated list of connector names.

          If not provided, the workflow will try to infer the
          connector name from the PR title.

      # Static args from the slash command dispatch:
      repo:
        required: false
        description: "The repository name"
      gitref:
        required: false
        description: "The git reference (branch or tag)"
      comment-id:
        required: false
        description: "The ID of the comment triggering the workflow"
      pr:
        required: false
        description: "The pull request number, if applicable"

jobs:
  generate-matrix:
    name: Generate Connector Matrix
    runs-on: ubuntu-24.04
    steps:
      - name: Get Connector List from Input
        if: inputs.connector_name
        run: |
          # If input is comma-separated list, translate to a newline-delimited string
          CONNECTORS=$(echo "${{ inputs.connector_name }}" | tr ',' '\n')
          echo "Found connectors input:\n${CONNECTORS}"
          echo "CONNECTORS=$CONNECTORS" >> $GITHUB_ENV

      - name: Checkout Current Branch
        if: ${{ ! inputs.connector_name }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get Connector List from Changes
        if: ${{ ! inputs.connector_name }}
        run: |
          # Get modified connectors
          CONNECTORS=$(./poe-tasks/get-modified-connectors.sh)
          echo -e "Detected connectors with changes:\n${CONNECTORS}"
          echo "CONNECTORS=$CONNECTORS" >> $GITHUB_ENV

      - name: Convert to JSON
        id: convert-matrix
        run: |
          # Check if CONNECTORS is empty
          if [ -z "$CONNECTORS" ]; then
            echo "No connectors modified. Setting matrix to empty."
            echo "matrix=[]" >> $GITHUB_OUTPUT
            exit 0
          fi
          # Convert the matrix from newline-delimited string to a JSON string
          matrix=$(printf '%s\n' "$CONNECTORS" | jq -R -s -c 'split("\n")[:-1] | map(select(. != "") | map({connector: .})')
          echo -e "Matrix JSON:\n${matrix}"
          echo "matrix=$matrix" >> $GITHUB_OUTPUT

    outputs:
      connector-matrix: ${{ steps.convert-matrix.outputs.matrix }}

  test-connectors:
    name: Test Connectors
    needs: [generate-matrix]
    runs-on: ubuntu-24.04
    strategy:
      matrix: ${{ fromJson(needs.generate-matrix.outputs.connector-matrix) }}
    steps:
      - name: Run Poe Slash Command Processor
        uses: aaronsteers/poe-command-processor@v1
        with:
          command: test-all

  lint-connectors:
    name: Lint Connectors
    needs: generate-matrix
    runs-on: ubuntu-24.04
    strategy:
      matrix: ${{ fromJson(needs.generate-matrix.outputs.connector-matrix) }}
    steps:
      - name: Run Poe Slash Command Processor
        uses: aaronsteers/poe-command-processor@v1
        with:
          command: lint-check
      - name: Run Poe Slash Command Processor
        uses: aaronsteers/poe-command-processor@v1
        with:
          command: format-check

  test-summary:
    name: Connector Test Summary Check
    needs: [test-connectors]
    runs-on: ubuntu-24.04
    steps:
      - name: Report Test Summary
        run: echo "✅ All connectors completed successfully, or no connectors were updated."

  lint-summary:
    name: Connector Lint Summary Check
    needs: [lint-connectors]
    runs-on: ubuntu-24.04
    steps:
      - name: Report Lint Summary
        run: echo "✅ All connectors completed successfully, or no connectors were updated."
