name: Connector Tests (beta)

on:
  # Triggered by all push events
  push:
  pull_request:
    types: [opened, synchronize, reopened]

  # Available as a reusable workflow
  # (https://docs.github.com/en/actions/sharing-automations/reusing-workflows)
  workflow_call:
    inputs:

      connector_name:
        type: string
        required: false
        description: >
          The name of the connector(s) to test.
          To test multiple connectors, use a newline-delimited
          or comma-separated list of connector names.

          If not provided, the workflow will try to infer the
          connector name from the PR title.

      repo:
        type: string
        required: false
        description: "The repository name"
      gitref:
        type: string
        required: false
        description: "The git reference (branch or tag)"
      comment-id:
        type: number
        required: false
        description: "The ID of the comment triggering the workflow"
      pr:
        type: number
        required: false
        description: "The pull request number, if applicable"

  # Available as a slash command and workflow dispatch
  workflow_dispatch:
    inputs:

      # Custom inputs for the connector test command:
      connector_name:
        required: false
        description: |
          The name of the connector(s) to test.
          To test multiple connectors, use a newline-delimited
          or comma-separated list of connector names.

          If not provided, the workflow will try to infer the
          connector name from the PR title.

      # Static args from the slash command dispatch:
      repo:
        required: false
        description: "The repository name"
      gitref:
        required: false
        description: "The git reference (branch or tag)"
      comment-id:
        required: false
        description: "The ID of the comment triggering the workflow"
      pr:
        required: false
        description: "The pull request number, if applicable"

jobs:
  generate-matrix:
    name: Generate Connector Matrix
    runs-on: ubuntu-24.04
    steps:
      - name: Get Connector List from Input
        if: inputs.connector_name
        run: |
          # If input is comma-separated list, translate to a newline-delimited string
          CONNECTORS=$(echo "${{ inputs.connector_name }}" | tr ',' '\n')
          echo "Found connectors input:\n${CONNECTORS}"
          echo "CONNECTORS=$CONNECTORS" >> $GITHUB_ENV

      - name: Checkout Current Branch
        if: ${{ ! inputs.connector_name }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get Connector List from Changes
        if: ${{ ! inputs.connector_name }}
        run: |
          # Get modified connectors
          CONNECTORS=$(./poe-tasks/get-modified-connectors.sh)
          echo -e "Detected connectors with changes:\n${CONNECTORS}"
          echo "CONNECTORS=$CONNECTORS" >> $GITHUB_ENV

      - name: Convert to JSON
        id: convert-matrix
        run: |
          # Check if CONNECTORS is empty
          if [ -z "$CONNECTORS" ]; then
            echo "No connectors modified. Setting matrix to empty string."
            echo "matrix=" >> $GITHUB_OUTPUT
            exit 0
          fi
          # Convert the matrix from newline-delimited string to a JSON string
          json_elements=$(IFS=,; echo "\"${CONNECTORS[*]}\"")
          json_output="{ \"connector\": [$json_elements] }"
          echo "matrix=$json_output" | tee -a "$GITHUB_OUTPUT"

    outputs:
      connector-matrix: ${{ steps.convert-matrix.outputs.matrix }}

  warm-tool-cache:
    # We warm the tool cache to speed up subsequent jobs
    name: Warm ASDF Tool Cache
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout Airbyte
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Install tools from asdf config
        uses: ai/asdf-cache-action@v1

  # Connector tests

  connectors-test-matrix:
    name: Test Connectors
    needs: [generate-matrix, warm-tool-cache]
    runs-on: ubuntu-24.04
    env:
      GCP_GSM_CREDENTIALS: ${{ secrets.GCP_GSM_CREDENTIALS }}
    if: ${{ needs.generate-matrix.outputs.connector-matrix != '' }}
    strategy:
      matrix: ${{ fromJson(needs.generate-matrix.outputs.connector-matrix) }}
      max-parallel: 5  # Limit number of parallel jobs
    steps:
      - name: Checkout Airbyte
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Install tools from asdf config
        uses: ai/asdf-cache-action@v1

      - name: Install Poe
        run: |
          uv tool install poethepoet

      - name: Install connector dependencies
        run: |
          poe connector ${{ matrix.connector }} install

      - name: Fetch connector secrets
        run: |
          poe connector ${{ matrix.connector }} fetch-secrets

      - name: Run 'test-all' Poe Command
        run: |
          poe connector ${{ matrix.connector }} test-all

  test-summary:
    name: Connector Test Summary Check
    needs: [connectors-test-matrix]
    runs-on: ubuntu-24.04
    steps:
      - name: Report Test Summary
        run: echo "âœ… All connector tests completed successfully."

  test-summary-noop:
    name: Connector Test Summary Check
    needs: [generate-matrix]
    if: ${{ ! needs.generate-matrix.outputs.connector-matrix }}
    runs-on: ubuntu-24.04
    steps:
      - name: Report Test Summary
        run: echo "ðŸŸ¦ No connectors updated. All good here."

  # Lint and format checks

  connectors-lint-matrix:
    name: Lint Connectors
    needs: [generate-matrix, warm-tool-cache]
    runs-on: ubuntu-24.04
    if: ${{ needs.generate-matrix.outputs.connector-matrix }}
    strategy:
      matrix: ${{ fromJson(needs.generate-matrix.outputs.connector-matrix) }}
      max-parallel: 10  # Limit number of parallel jobs
    steps:
      - name: Checkout Airbyte
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Install tools from asdf config
        uses: ai/asdf-cache-action@v1

      - name: Install Poe
        run: |
          uv tool install poethepoet

      - name: Install connector dependencies
        run: |
          poe connector ${{ matrix.connector }} install

      - name: Run lint check
        run: |
          poe connector ${{ matrix.connector }} lint-check

      - name: Run format-check
        run: |
          poe connector ${{ matrix.connector }} format-check


  lint-summary:
    name: Connector Lint Summary Check
    needs: [connectors-lint-matrix]
    runs-on: ubuntu-24.04
    steps:
      - name: Report Lint Summary
        run: echo "âœ… All connectors lint checks completed successfully."

  lint-summary-noop:
    name: Connector Test Summary Check
    needs: [generate-matrix]
    if: ${{ ! needs.generate-matrix.outputs.connector-matrix }}
    runs-on: ubuntu-24.04
    steps:
      - name: Report Lint Summary
        run: echo "ðŸŸ¦ No connectors updated. All good here."
